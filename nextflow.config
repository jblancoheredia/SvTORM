/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                               MSKCC/SVtorm Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                          Default config options for all compute environments
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                                                   = null
    seq_center                                              = "MSKCC_IGO"
    seq_library                                             = "Av1"
    seq_platform                                            = "ILLUMINA"

    // MultiQC options
    multiqc_config                                          = null
    multiqc_title                                           = null
    multiqc_logo                                            = "${projectDir}/assets/mskcc-svtorm_logo_light.png"
    max_multiqc_email_size                                  = '25.MB'
    multiqc_methods_description                             = null

    // Genome
    genome                                                  = "GRCh38"
    refs_dir                                                = '/juno/cmo/bergerlab/blancoj/.HGREF' // "/Users/blancoj/Documents/MSKCC/CMOinnovation/REF"
    read_length                                             = 100
    genome_base                                             = "${refs_dir}/${params.genome}"
    save_reference                                          = false
    ensembl_version                                         = 112
    igenomes_ignore                                         = true

    // Miscelanious

    bwa                                                     = "${params.genome_base}/bwa"
    fai                                                     = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.fa.fai"
    fasta                                                   = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.fa"
    refflat                                                 = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.chr.gtf.refflat"
    intervals                                               = "${params.genome_base}/intervals/Homo_sapiens.${params.genome}.${params.ensembl_version}.${params.seq_library}.sort.bed"
    kraken2db                                               = "${params.genome_base}/kraken2db"
    normal_bam                                              = "${params.genome_base}/control_normal/NORMAL.bam"
    normal_bai                                              = "${params.genome_base}/control_normal/NORMAL.bam.bai"
    chromosomes                                             = "${params.genome_base}/fusioncatcher/human_v112/chromosomes_lengths.txt"
    exclude_bed                                             = "${params.genome_base}/mappability/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.exclude.bed"
    known_sites                                             = "${params.genome_base}/gatk4/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.dbsnp.vcf.gz"
    blocklist_bed                                           = "${params.genome_base}/mappability/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.blocklist.bed"
    pon_directory                                           = "${params.genome_base}/gridss"
    known_sites_tbi                                         = "${params.genome_base}/gatk4/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.dbsnp.vcf.gz.tbi"
    intervals_bed_gunzip                                    = "${params.genome_base}/intervals/Homo_sapiens.${params.genome}.${params.ensembl_version}.${params.seq_library}.trgt.sort.bed.gz"
    intervals_bed_gunzip_index                              = "${params.genome_base}/intervals/Homo_sapiens.${params.genome}.${params.ensembl_version}.${params.seq_library}.trgt.sort.bed.gz.tbi"

    // Boilerplate options
    outdir                                                  = null
    publish_dir_mode                                        = 'copy'
    email                                                   = null
    email_on_fail                                           = null
    plaintext_email                                         = false
    monochrome_logs                                         = false
    hook_url                                                = null
    help                                                    = false
    help_full                                               = false
    show_hidden                                             = false
    version                                                 = false
    pipelines_testdata_base_path                            = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix                                     = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name                                     = null
    config_profile_description                              = null

    custom_config_version                                   = 'master'
    custom_config_base                                      = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact                                  = null
    config_profile_url                                      = null

    // Schema validation default options
    validate_params                                         = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes                                          = true
        process.beforeScript                                = 'echo $HOSTNAME'
        cleanup                                             = false
        nextflow.enable.configProcessNamesValidation        = true
    }
    conda {
        conda.enabled                                       = true
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        conda.channels                                      = ['conda-forge', 'bioconda']
        apptainer.enabled                                   = false
    }
    mamba {
        conda.enabled                                       = true
        conda.useMamba                                      = true
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    docker {
        docker.enabled                                      = true
        conda.enabled                                       = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
        docker.runOptions                                   = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled                                 = true
        singularity.autoMounts                              = true
        singularity.cacheDir                                = "/juno/cmo/bergerlab/blancoj/.TOOLS/snglty/.singularity/cache"
        singularity.runOptions                              = "-B $TMPDIR"
        singularity.pullTimeout                             = '60m'
        executor                                            = 'lsf'
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false

        process {
            executor                                        = 'lsf'
            maxRetries                                      = 1
            errorStrategy                                   = 'retry'
            clusterOptions                                  = '-R "select[mem>16] rusage[mem=16]"'
            clusterOptions                                  = '-e .command.err'
        }
        
        executor {
            name                                            = 'lsf'
            queue                                           = 'default'
            queueSize                                       = 384
            pollInterval                                    = '10 sec'
            perJobMemLimit                                  = true
            submitRateLimit                                 = '10 sec'
        }
    }
    podman {
        podman.enabled                                      = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    shifter {
        shifter.enabled                                     = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    charliecloud {
        charliecloud.enabled                                = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = false
    }
    apptainer {
        apptainer.enabled                                   = true
        apptainer.autoMounts                                = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
    }
    wave {
        apptainer.ociAutoPull                               = true
        singularity.ociAutoPull                             = true
        wave.enabled                                        = true
        wave.freeze                                         = true
        wave.strategy                                       = 'conda,container'
    }
    gitpod {
        executor.name                                       = 'local'
        executor.cpus                                       = 4
        executor.memory                                     = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry                                          = 'quay.io'
docker.registry                                             = 'quay.io'
podman.registry                                             = 'quay.io'
singularity.registry                                        = 'quay.io'
charliecloud.registry                                       = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE                                        = 1
    R_PROFILE_USER                                          = "/.Rprofile"
    R_ENVIRON_USER                                          = "/.Renviron"
    JULIA_DEPOT_PATH                                        = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",                                                   // No clobber - prevent output redirection from overwriting files.
    "-e",                                                   // Exit if a tool returns a non-zero status/exit code
    "-u",                                                   // Treat unset variables and parameters as an error
    "-o",                                                   // Returns the status of the last command to exit..
    "pipefail"                                              // ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}
prov {
    enabled = true
    formats {
        bco {
            file = "${params.outdir}/pipeline_info/manifest_${trace_timestamp}.bco.json"
        }
    }
}

manifest {
    name            = 'mskcc/svtorm'
    contributors    = [
        [
            name: 'Juan Blanco Heredia',
            affiliation: 'MASKC-CMO-Technological Innovation Lab',
            email: 'blancoj@mskcc.org',
            github: 'https://github.com/jblancoheredia',
            contribution: ['author'],
            orcid: '0000-0001-9526-7450'
        ],
    ]
    homePage        = 'https://github.com/mskcc/svtorm'
    description     = """Structural Variant for Target Panels Optimized by Recalling & Merging"""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    nextflowVersion = '!>=24.04.2'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
    id 'nf-prov@1.2.2'   // Provenance reports for pipeline runs
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run mskcc/svtorm -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
